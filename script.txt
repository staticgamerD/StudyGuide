// JavaScript code to handle the Security+ SY0-701 test

// Array of questions
const questions = [
    {
        q: "Which of the following is a type of social engineering attack that tricks users into revealing personal information?",
        a: "Phishing",
        options: ["Phishing", "Brute force", "DDoS", "Man-in-the-middle"]
    },
    {
        q: "What is the primary purpose of a vulnerability scan?",
        a: "To identify potential weaknesses in a system that could be exploited",
        options: [
            "To provide an in-depth analysis of potential network intrusions",
            "To identify potential weaknesses in a system that could be exploited",
            "To encrypt sensitive data during transmission",
            "To ensure compliance with regulatory requirements"
        ]
    },
    {
        q: "Which technology is used to protect data transmitted over the internet by encrypting it?",
        a: "SSL/TLS",
        options: ["SSL/TLS", "VPN", "IDS", "DMZ"]
    },
    {
        q: "Which access control model is based on user roles and privileges within an organization?",
        a: "Role-Based Access Control (RBAC)",
        options: [
            "Role-Based Access Control (RBAC)",
            "Discretionary Access Control (DAC)",
            "Mandatory Access Control (MAC)",
            "Attribute-Based Access Control (ABAC)"
        ]
    },
    // Add more questions here
];

// Shuffle function for randomizing questions
function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

// Initialize test
let currentQuestionIndex = 0;
let correctAnswers = 0;
let testQuestions = shuffleArray(questions).slice(0, 100); // Take 100 random questions

// Timer logic
let timerSeconds = 90 * 60; // 90 minutes in seconds
const timerElement = document.getElementById('timer');
const timerInterval = setInterval(() => {
    const minutes = Math.floor(timerSeconds / 60);
    const seconds = timerSeconds % 60;
    timerElement.textContent = `Time Remaining: ${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
    timerSeconds--;

    if (timerSeconds < 0) {
        clearInterval(timerInterval);
        showResult();
    }
}, 1000);

// Display the current question
function displayQuestion() {
    if (currentQuestionIndex >= testQuestions.length) {
        showResult();
        return;
    }

    const question = testQuestions[currentQuestionIndex];
    const questionHTML = `
        <div class="question">
            <p>${question.q}</p>
            <div class="answers">
                ${question.options.map((option, index) => `
                    <label class="answer-option">
                        <input type="radio" name="answer" value="${option}"> ${option}
                    </label>
                `).join('')}
            </div>
        </div>
    `;
    document.getElementById('question-container').innerHTML = questionHTML;
}

// Show result
function showResult() {
    document.getElementById('result').textContent = `Test completed! You got ${correctAnswers} out of ${testQuestions.length} correct.`;
    document.getElementById('next-button').style.display = 'none';
}

// Handle next button click
document.getElementById('next-button').addEventListener('click', () => {
    const selectedOption = document.querySelector('input[name="answer"]:checked');
    if (selectedOption) {
        const answer = selectedOption.value;
        if (answer === testQuestions[currentQuestionIndex].a) {
            correctAnswers++;
        }
        currentQuestionIndex++;
        displayQuestion();
    } else {
        alert('Please select an answer before proceeding.');
    }
});

// Initial display
displayQuestion();
